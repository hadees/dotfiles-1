
- name: "Import GPG key if not yet imported"
  # list secret key || batch import it to avoid prompting for passphrase
  shell: gpg -K '{{ gpg_key_id }}' >/dev/null 2>&1 || gpg --batch --import '{{ gpg_key_file }}'
  tags:
    - gpg

- name: 'Ensure home dir has correct permissions'
  file: 
    path: '/Users/{{ user_name }}'
    # so that public can't read user's home directory
    mode: 0751
  tags:
    - permissions

- name: 'Check ssh keys existence'
  shell: ls -lh '/Users/{{ user_name }}/.ssh'
  register: ssh_key_check
  ignore_errors: True
  tags:
    - permissions
    - ssh

- name: 'Ensure .ssh directory has correct structure'
  file: 
      path: '/Users/{{ user_name }}/.ssh/identities/{{ item.identity }}'
      state: directory
      mode: 0700
  when: ssh_key_check is failed
  with_items: '{{ ssh_keys }}'
  tags:
    - permissions
    - ssh

- name: 'Enter ssh key passphrase if needed'
  pause: 
    prompt: "Passphrase for new ssh key ('{{ item.identity }}')"
    echo: no
  when: ssh_key_check is failed
  register: ssh_key_passphrases
  with_items: '{{ ssh_keys }}'
  tags: 
    - ssh

- name: 'Create 4096-bit SSH keys for all keys, defined in ssh_keys variable'
  shell: ssh-keygen -t rsa -b 4096 -C '{{ item.item.label }}' -N '{{ item.user_input }}' -f '/Users/{{ user_name }}/.ssh/identities/{{ item.item.identity }}/id_rsa'
  when: ssh_key_check is failed
  with_items: '{{ ssh_key_passphrases.results }}'
  tags:
    - ssh

- name: 'Ensure ssh public keys have correct permissions'
  file: 
    path: '/Users/{{ user_name }}/.ssh/identities/{{ item.identity }}/id_rsa.pub'
    mode: 0644
  with_items: '{{ ssh_keys }}'
  tags:
    - permissions
    - ssh

- name: 'Ensure ssh private keys have correct permissions'
  file: 
    path: '/Users/{{ user_name }}/.ssh/identities/{{ item.identity }}/id_rsa'
    mode: 0600
  with_items: '{{ ssh_keys }}'
  tags:
    - permissions
    - ssh